//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace bashTool.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("bashTool.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 #!/bin/bash
        ///i=0
        ///cat /tmp/ip.conf|while read ipaddr; do
        ///let i+=1
        ///ip=$ipaddr
        ///passwd=setPasswd
        ///port=22
        ///local_dir=/opt/change.sh
        ///goal_dir=/opt
        ///#echo &quot;executing No$i job&quot;
        ////usr/bin/expect &lt;&lt;-EOF
        ///set time 300
        ///spawn scp  -r -p$port $local_dir root@$ip:$goal_dir
        ///expect {
        ///&quot;*yes/no&quot; { send &quot;yes\r&quot;; exp_continue }
        ///&quot;*password:&quot; { send &quot;$passwd\r&quot; }
        ///}
        ///set timeout 500
        ///spawn ssh root@$ip &quot;sh /opt/change.sh&quot;
        ///expect {
        ///&quot;*yes/no&quot; { send &quot;yes\r&quot;; exp_continue }
        ///&quot;*password:&quot; { send &quot;$passwd\r&quot; }
        ///}
        ///
        ///set ti [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string exec {
            get {
                return ResourceManager.GetString("exec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 #!/bin/bash
        ///yum -y install gcc gcc-c++ zlib-devel pcre-devel readline readline-devel bzip2-devel rpm-build kernel-devel libaio-devel elfutils-libelf-devel compat-libstdc++-33 compat-libcap1 cmake bison automake ncurses-devel xinetd openssl-devel
        ///
        ///cat /tmp/grub |grep GRUB_CMDLINE_LINUX|sed &apos;s/&quot;/ numa=off&quot;/2&apos;
        ///grub2-mkconfig -o /boot/grub2/grub.cfg
        ///
        ///
        ///echo &quot;
        ///mysql   soft    nproc   65535
        ///mysql   hard    nproc   65535
        ///mysql   soft    nofile  65536
        ///mysql   hard    nofile  65536
        ///&quot; &gt;&gt; /etc/security/limi [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string mysql_autoinstall {
            get {
                return ResourceManager.GetString("mysql_autoinstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 cp -r /etc/yum.repos.d /etc/yum.repos.d.bak
        ///rm -rf /etc/yum.repos.d/*
        ///echo &quot;
        ///[base]
        ///name=base
        ///baseurl=http://172.16.128.94/base
        ///enabled=1
        ///gpgcheck=0
        ///gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
        ///
        ///
        ///[epel]
        ///name=epel
        ///baseurl=http://172.16.128.94/epel
        ///enabled=1
        ///gpgcheck=0
        ///gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
        ///
        ///
        ///[updates]
        ///name=updates
        ///baseurl=http://172.16.128.94/updates
        ///enabled=1
        ///gpgcheck=0
        ///gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
        ///
        ///[extras]
        ///name=extras
        ///baseur [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string yum_autoinstall {
            get {
                return ResourceManager.GetString("yum_autoinstall", resourceCulture);
            }
        }
    }
}
